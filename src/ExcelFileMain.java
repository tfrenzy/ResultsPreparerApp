import java.io.*;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import jxl.*;
import jxl.write.*;
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ExcelFileMain.java
 *
 * Created on 21-Jul-2011, 20:02:58
 */

/**
 *
 * @author Tonye
 */
public class ExcelFileMain extends javax.swing.JFrame {

Workbook sourcew, sourceww, sourcem;
WritableWorkbook outputfile;
Sheet Sheet1, Sheet2;
WritableSheet Sheet11;
String content = "";
String content2 = "";
String mat_file = "";
String content3 = "";
Range ran;int marks;
int mat_count = 0;int semest = 1;;
char[] cotact = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'};
String coursecode, coursetitle, courseyr, courseunit, colmatnos, colscores, semester;//Cell addresses of the corresponding variables.
String xcoursecode, xcoursetitle, xcourseyr, xcourseunit, xsemester;//Values of the corresponding variables
String mat_no; String yrdiff;
String fst_semester[], scd_semester[];//Save strings to be written to file and loaded at convenience
boolean saveResults = false;String result;
boolean manga = false;boolean manga2 = false;boolean manga3 = false;boolean manga4 = false;boolean loaded = true;
FileFilter filta;
int lower, upper, cello;
/** Creates new form ExcelFileMain */


public ExcelFileMain() {
    filta = new FileFilter() {

            @Override
            public boolean accept(File f) {
                if ((f.getAbsolutePath().endsWith(".xls"))||(f.isDirectory())) return true;
               // throw new UnsupportedOperationException("Not supported yet.");
                else return false;
            }

            @Override
            public String getDescription() {
//                throw new UnsupportedOperationException("Not supported yet.");
                return "*.xls";
            }
        };

initComponents();
        jMenuItem2.setVisible(false);
        jMenuItem7.setVisible(false);
        jMenu3.setVisible(false);
        jMenu4.setVisible(false);
        jMenuItem4.setVisible(false);
        jMenuItem5.setVisible(false);
        jMenuItem6.setVisible(false);
        jMenu2.setVisible(false);
         jMenuItem10.setVisible(false);
        jInternalFrame1.setSize(589, 391);
        jInternalFrame2.setSize(571, 438);
        jInternalFrame3.setSize(383, 115);
        jDialog1.setVisible(false);
        fst_semester = new String[7];
        scd_semester = new String[7];
            try {
File file = new File("first.smr");
File file2 = new File("second.smr");
File file3 = new File("res.dat");

if ((file.exists())&&(file2.exists())) {
   jMenu2.setVisible(true);
   jMenuItem6.setVisible(true);
}
if (file3.exists()) {
    jMenu2.setVisible(true);
    jMenuItem5.setVisible(true);
}
} catch(Exception e) {}
        try {
File file = new File("location.log");
File file4 = new File("batch.log");
if (file.exists()) {
    loadFileLocations();
    jProgressBar1.setStringPainted(true);
    jProgressBar1.setValue(100);
     jProgressBar1.setString("Source: " + content + " and Destination: " + content2);
     jMenuItem1.setVisible(false);
     jMenuItem2.setVisible(true);
     jMenuItem4.setVisible(true);
     jMenuItem7.setVisible(true);
     jMenu2.setVisible(true);
     jMenu3.setVisible(true);
     jMenu4.setVisible(true);
     jMenu1.setText("Results Preparation");
     manga2 = true;
}
if (file4.exists()) {
 loadBatchLocation();
 jMenuItem10.setVisible(true);
}
} catch(Exception e) {}
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jLabel3 = new javax.swing.JLabel();
        javax.swing.JButton jButton3 = new javax.swing.JButton();
        javax.swing.JDesktopPane jDesktopPane1 = new javax.swing.JDesktopPane();
        jFileChooser = new javax.swing.JInternalFrame();
        jFileChooser1 = new javax.swing.JFileChooser();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jLabel2 = new javax.swing.JLabel();
        jFileChooser2 = new javax.swing.JFileChooser();
        jPanel4 = new javax.swing.JPanel();
        javax.swing.JLabel jLabel14 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        javax.swing.JLabel jLabel15 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        javax.swing.JButton jButton1 = new javax.swing.JButton();
        javax.swing.JLabel jLabel16 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();
        jLabel17 = new javax.swing.JLabel();
        jInternalFrame2 = new javax.swing.JInternalFrame();
        javax.swing.JLabel jLabel4 = new javax.swing.JLabel();
        javax.swing.JPanel jPanel1 = new javax.swing.JPanel();
        jTextField4 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        javax.swing.JLabel jLabel5 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel6 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel7 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel12 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        javax.swing.JLabel jLabel13 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        javax.swing.JPanel jPanel2 = new javax.swing.JPanel();
        javax.swing.JLabel jLabel8 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel9 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        javax.swing.JPanel jPanel3 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        javax.swing.JButton jButton4 = new javax.swing.JButton();
        jInternalFrame3 = new javax.swing.JInternalFrame();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jInternalFrame4 = new javax.swing.JInternalFrame();
        javax.swing.JScrollPane jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        javax.swing.JScrollPane jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        javax.swing.JScrollPane jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        javax.swing.JScrollPane jScrollPane5 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        javax.swing.JScrollPane jScrollPane6 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        javax.swing.JScrollPane jScrollPane7 = new javax.swing.JScrollPane();
        jTable7 = new javax.swing.JTable();
        javax.swing.JScrollPane jScrollPane8 = new javax.swing.JScrollPane();
        jTable8 = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jInternalFrame5 = new javax.swing.JInternalFrame();
        jFileChooser3 = new javax.swing.JFileChooser();
        jProgressBar1 = new javax.swing.JProgressBar();
        javax.swing.JMenuBar jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        javax.swing.JMenuItem jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        javax.swing.JMenuItem jMenuItem8 = new javax.swing.JMenuItem();
        javax.swing.JMenuItem jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();

        jLabel3.setText("jLabel3");

        jButton3.setText("Ok");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jDialog1Layout = new org.jdesktop.layout.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jDialog1Layout.createSequentialGroup()
                .add(jDialog1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jDialog1Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE))
                    .add(jDialog1Layout.createSequentialGroup()
                        .add(84, 84, 84)
                        .add(jButton3)))
                .addContainerGap())
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jDialog1Layout.createSequentialGroup()
                .add(25, 25, 25)
                .add(jLabel3)
                .add(18, 18, 18)
                .add(jButton3)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Results Preparer Application");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jDesktopPane1.setBackground(new java.awt.Color(102, 102, 0));
        jDesktopPane1.setBorder(new javax.swing.border.MatteBorder(null));

        jFileChooser.setClosable(true);
        jFileChooser.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        jFileChooser.setIconifiable(true);
        jFileChooser.setMaximizable(true);
        jFileChooser.setResizable(true);

        jFileChooser1.setAcceptAllFileFilterUsed(false);
        jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jFileChooserLayout = new org.jdesktop.layout.GroupLayout(jFileChooser.getContentPane());
        jFileChooser.getContentPane().setLayout(jFileChooserLayout);
        jFileChooserLayout.setHorizontalGroup(
            jFileChooserLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jFileChooserLayout.createSequentialGroup()
                .add(jFileChooser1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 424, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(89, Short.MAX_VALUE))
        );
        jFileChooserLayout.setVerticalGroup(
            jFileChooserLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jFileChooserLayout.createSequentialGroup()
                .add(jFileChooser1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 327, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jFileChooser.setBounds(20, 10, 450, 370);
        jDesktopPane1.add(jFileChooser, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jInternalFrame1.setClosable(true);
        jInternalFrame1.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        jInternalFrame1.setIconifiable(true);
        jInternalFrame1.setMaximizable(true);
        jInternalFrame1.setResizable(true);
        jInternalFrame1.setTitle("Select Matriculation Number File");
        jInternalFrame1.addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                jInternalFrame1InternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jLabel2.setText("Select a file containing the matriculation numbers");

        jFileChooser2.setAcceptAllFileFilterUsed(false);
        jFileChooser2.setApproveButtonText("Ok");
        jFileChooser2.setDialogType(javax.swing.JFileChooser.CUSTOM_DIALOG);
        jFileChooser2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser2ActionPerformed(evt);
            }
        });

        jLabel14.setText("Specify cell adresses containing matriculation numbers(Must be in a column)");

        jLabel15.setText("to Cell");

        jButton1.setText("Continue");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel16.setText("From Cell");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z" }));

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .add(19, 19, 19)
                .add(jLabel14)
                .addContainerGap(31, Short.MAX_VALUE))
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel16)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 49, Short.MAX_VALUE)
                .add(jComboBox3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jTextField7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 49, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel15)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jTextField8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 44, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jButton1)
                .add(41, 41, 41))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel14)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel16)
                    .add(jButton1)
                    .add(jTextField8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel15)
                    .add(jTextField7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jComboBox3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel17.setForeground(new java.awt.Color(255, 0, 51));
        jLabel17.setText("Working. Please wait");

        org.jdesktop.layout.GroupLayout jInternalFrame1Layout = new org.jdesktop.layout.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jInternalFrame1Layout.createSequentialGroup()
                .add(jInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jInternalFrame1Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jFileChooser2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 411, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                .add(jLabel2)
                                .add(jPanel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .add(jInternalFrame1Layout.createSequentialGroup()
                        .add(68, 68, 68)
                        .add(jLabel17)))
                .addContainerGap())
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jFileChooser2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 272, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel17)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jInternalFrame1.setBounds(20, 20, 380, 280);
        jDesktopPane1.add(jInternalFrame1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jInternalFrame2.setClosable(true);
        jInternalFrame2.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        jInternalFrame2.setIconifiable(true);
        jInternalFrame2.setMaximizable(true);
        jInternalFrame2.setResizable(true);
        jInternalFrame2.setTitle("Excel Results Sheet Setup");

        jLabel4.setText("Please fill in the following setup information for the result  mark sheet");

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setToolTipText("Fill in Course Information");

        jLabel5.setText("Address of Cell containing course code");

        jLabel6.setText("Address of Cell containing course title");

        jLabel7.setText("Address of Cell containing course year");

        jLabel12.setText("Address of Cell containing course unit");

        jLabel13.setText("Address of cell containing course semester");

        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel13)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel7)
                            .add(jLabel12)
                            .add(jLabel6))
                        .add(33, 33, 33)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jTextField6)
                            .add(jTextField4)
                            .add(jTextField2)
                            .add(jTextField3)
                            .add(jTextField5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE))))
                .addContainerGap(102, Short.MAX_VALUE))
            .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .add(jLabel5)
                    .add(265, 265, 265)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jTextField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextField3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel6))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextField5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 14, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextField4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel7))
                .add(12, 12, 12)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel13)
                    .add(jTextField6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
            .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel1Layout.createSequentialGroup()
                    .add(14, 14, 14)
                    .add(jLabel5)
                    .addContainerGap(139, Short.MAX_VALUE)))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel8.setText("Column containing student's matric. numbers");

        jLabel9.setText("Column containing student's scores");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z" }));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z" }));

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel8)
                    .add(jLabel9))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jComboBox2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(145, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel8)
                    .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel9)
                    .add(jComboBox2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jCheckBox1.setText("Always use this setup information for all result sheets");

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jCheckBox1)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel3Layout.createSequentialGroup()
                .add(jCheckBox1)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton4.setText("Save and continue with information");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jInternalFrame2Layout = new org.jdesktop.layout.GroupLayout(jInternalFrame2.getContentPane());
        jInternalFrame2.getContentPane().setLayout(jInternalFrame2Layout);
        jInternalFrame2Layout.setHorizontalGroup(
            jInternalFrame2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jInternalFrame2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jInternalFrame2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jInternalFrame2Layout.createSequentialGroup()
                        .add(jLabel4)
                        .addContainerGap(214, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jInternalFrame2Layout.createSequentialGroup()
                        .add(jInternalFrame2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jInternalFrame2Layout.createSequentialGroup()
                                .add(32, 32, 32)
                                .add(jButton4)))
                        .add(143, 143, 143))))
        );
        jInternalFrame2Layout.setVerticalGroup(
            jInternalFrame2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jInternalFrame2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel4)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 10, Short.MAX_VALUE)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jButton4)
                .addContainerGap())
        );

        jInternalFrame2.setBounds(10, 20, 500, 360);
        jDesktopPane1.add(jInternalFrame2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jInternalFrame3.setClosable(true);
        jInternalFrame3.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        jInternalFrame3.setIconifiable(true);
        jInternalFrame3.setMaximizable(true);
        jInternalFrame3.setResizable(true);
        jInternalFrame3.setTitle("Input Matriculation Number");
        jInternalFrame3.addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                jInternalFrame3InternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jLabel1.setLabelFor(jTextField1);
        jLabel1.setText("Input the Matriculation Number for student owning Spreadsheet");

        jButton2.setText("Continue");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jInternalFrame3Layout = new org.jdesktop.layout.GroupLayout(jInternalFrame3.getContentPane());
        jInternalFrame3.getContentPane().setLayout(jInternalFrame3Layout);
        jInternalFrame3Layout.setHorizontalGroup(
            jInternalFrame3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jInternalFrame3Layout.createSequentialGroup()
                .add(4, 4, 4)
                .add(jInternalFrame3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel1)
                    .add(jInternalFrame3Layout.createSequentialGroup()
                        .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 102, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jButton2)))
                .addContainerGap(83, Short.MAX_VALUE))
        );
        jInternalFrame3Layout.setVerticalGroup(
            jInternalFrame3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jInternalFrame3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .add(8, 8, 8)
                .add(jInternalFrame3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton2))
                .addContainerGap(191, Short.MAX_VALUE))
        );

        jInternalFrame3.setBounds(12, 0, 410, 270);
        jDesktopPane1.add(jInternalFrame3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jInternalFrame4.setClosable(true);
        jInternalFrame4.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        jInternalFrame4.setIconifiable(true);
        jInternalFrame4.setMaximizable(true);
        jInternalFrame4.setResizable(true);
        jInternalFrame4.setTitle("Course record sheet");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "First Year"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jLabel10.setText("Please fill in the cell addresses of cells to contain course code in Excel sheet");

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Second Year"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Third Year"
            }
        ));
        jScrollPane4.setViewportView(jTable4);

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Fourth Year"
            }
        ));
        jScrollPane5.setViewportView(jTable5);

        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Fifth Year"
            }
        ));
        jScrollPane6.setViewportView(jTable6);

        jTable7.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Sixth Year"
            }
        ));
        jScrollPane7.setViewportView(jTable7);

        jTable8.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Seventh Year"
            }
        ));
        jScrollPane8.setViewportView(jTable8);

        jButton6.setText("Fill in First Semester Information");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Sylfaen", 1, 11));
        jLabel11.setForeground(new java.awt.Color(153, 0, 102));
        jLabel11.setText("FIRST SEMESTER COURSES");

        org.jdesktop.layout.GroupLayout jInternalFrame4Layout = new org.jdesktop.layout.GroupLayout(jInternalFrame4.getContentPane());
        jInternalFrame4.getContentPane().setLayout(jInternalFrame4Layout);
        jInternalFrame4Layout.setHorizontalGroup(
            jInternalFrame4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jInternalFrame4Layout.createSequentialGroup()
                .add(jInternalFrame4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jInternalFrame4Layout.createSequentialGroup()
                        .add(26, 26, 26)
                        .add(jInternalFrame4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jInternalFrame4Layout.createSequentialGroup()
                                .add(jLabel11)
                                .add(18, 18, 18)
                                .add(jLabel10))
                            .add(jInternalFrame4Layout.createSequentialGroup()
                                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 68, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 77, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 68, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jScrollPane5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 76, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jScrollPane6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 74, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(6, 6, 6)
                                .add(jScrollPane7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 73, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jScrollPane8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                    .add(jInternalFrame4Layout.createSequentialGroup()
                        .add(125, 125, 125)
                        .add(jButton6)))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        jInternalFrame4Layout.setVerticalGroup(
            jInternalFrame4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jInternalFrame4Layout.createSequentialGroup()
                .add(18, 18, 18)
                .add(jInternalFrame4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel11)
                    .add(jLabel10))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jInternalFrame4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jInternalFrame4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane7, 0, 0, Short.MAX_VALUE)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane5, 0, 0, Short.MAX_VALUE)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane3, 0, 0, Short.MAX_VALUE)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane4, 0, 0, Short.MAX_VALUE))
                    .add(jScrollPane8, 0, 0, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton6)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jInternalFrame4.setBounds(10, 10, 660, 420);
        jDesktopPane1.add(jInternalFrame4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jInternalFrame5.setClosable(true);
        jInternalFrame5.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        jInternalFrame5.setIconifiable(true);
        jInternalFrame5.setMaximizable(true);
        jInternalFrame5.setResizable(true);
        jInternalFrame5.setTitle("Select folder that contains result files for batch operation");
        jInternalFrame5.addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                jInternalFrame5InternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jFileChooser3.setAcceptAllFileFilterUsed(false);
        jFileChooser3.setApproveButtonText("Select folder");
        jFileChooser3.setDialogType(javax.swing.JFileChooser.CUSTOM_DIALOG);
        jFileChooser3.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);
        jFileChooser3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser3ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jInternalFrame5Layout = new org.jdesktop.layout.GroupLayout(jInternalFrame5.getContentPane());
        jInternalFrame5.getContentPane().setLayout(jInternalFrame5Layout);
        jInternalFrame5Layout.setHorizontalGroup(
            jInternalFrame5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jInternalFrame5Layout.createSequentialGroup()
                .add(jFileChooser3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 417, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jInternalFrame5Layout.setVerticalGroup(
            jInternalFrame5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jInternalFrame5Layout.createSequentialGroup()
                .add(jFileChooser3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 359, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jInternalFrame5.setBounds(0, 10, 460, 420);
        jDesktopPane1.add(jInternalFrame5, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jMenu1.setText("File Select");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        jMenuItem1.setText("Select source file (.xls)");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem7.setText("Proceed to Setup");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem7);

        jMenu3.setText("Results Preparation");

        jMenuItem4.setText("Fill in result into Spreadsheet (Single mat no)");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem4);

        jMenuItem2.setText("Fill in result into Spreadsheets (Batch mat nos)");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem2);

        jMenu1.add(jMenu3);

        jMenuItem3.setText("Exit");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Change Setup");

        jMenuItem5.setText("Change Result Sheet setup");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuItem6.setText("Change Course Record sheet setup");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenu4.setText("File Locations");

        jMenuItem8.setText("Source file");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem8);

        jMenuItem9.setText("Destination File");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem9);

        jMenuItem10.setText("Batch Results Folder");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem10);

        jMenu2.add(jMenu4);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jProgressBar1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
            .add(jDesktopPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(jDesktopPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jProgressBar1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
System.exit(0);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    public void assignSource(String source) {
        try {
         sourcew = Workbook.getWorkbook(new File(source));
        Sheet1 = sourcew.getSheet(0);
        }
        catch (Exception e) {e.printStackTrace();}
    }

    public void assignDestination(String destination) {
      try {
         sourceww = Workbook.getWorkbook(new File(destination));
         outputfile = Workbook.createWorkbook(new File(destination), sourceww);
         Sheet11 = outputfile.getSheet(0);
         
        }
        catch (Exception e) {e.printStackTrace();}
    }

    public Sheet assignxSource(String source) {
        Sheet2 = null;
      try {
         sourcem = Workbook.getWorkbook(new File(source));
         Sheet2 = sourcem.getSheet(0);
        }
        catch (Exception e) {e.printStackTrace();}
      return Sheet2;
    }

    public void deassignx() {
        sourcem.close();
        Sheet2 = null;
        sourcem = null;
        loaded = true;
    }

    public void assignDestination(String destination, String source) {
        try {
         sourceww = Workbook.getWorkbook(new File(source));
         outputfile = Workbook.createWorkbook(new File(destination), sourceww);
         Sheet11 = outputfile.getSheet(0);

        }
        catch (Exception e) {e.printStackTrace();}
    }

    public void writeStringValue(String r, int column, int row) {
   Label label = new Label(column, row, r);
   try {
Sheet11.addCell(label);
        }
   catch (Exception e) {}
    }

    public void writeStringValue(String add, String add2) {
        try {
            add = add.toLowerCase();
            add2 = add2.toLowerCase();
    }
    catch (Exception ee) {}
        Label label = null;Cell cell = null;
        try {
        //Obtain source cell
        
        char[] v = add2.toCharArray();
        char[] s = add.toCharArray();
        String n = null; String val = null; String val2 = null;
            
        if (s.length == 2) {val = n.valueOf(s[1]);}
 else {
            val = "";
 for (int y = 1; y <= s.length-1; y++) {
     val = val + s[y];
 }
 }
        
        if (v.length == 2) {val2 = n.valueOf(v[1]);}
        else {
            val2 = "";
 for (int y = 1; y <= v.length-1; y++) {
     val2 = val2 + v[y];
 }
 }
//System.out.println(val + ":" + val2);
         for (int i = 0; i <= cotact.length-1; i++) {
            if (s[0] == cotact[i]) {cell = Sheet1.getCell(i, new Integer(val).intValue()-1);}
        }
       //System.out.println(cell.getContents());
//Then split address string
        for (int i = 0; i <= cotact.length-1; i++) {
            if (v[0] == cotact[i]) {label = new Label(i, new Integer(val2).intValue()-1, cell.getContents());}
        }
        }
        catch (Exception e2) {e2.printStackTrace();overwrite();return;}
   try {
if (label != null) Sheet11.addCell(label);
        }
   catch (Exception e) {e.printStackTrace();overwrite();}
    }
    
    public void writeNumberValue(int num, int column, int row) {
WritableCellFormat integerFormat = new WritableCellFormat (NumberFormats.INTEGER);
jxl.write.Number number2 = new jxl.write.Number(column, row, num, integerFormat);
try {
Sheet11.addCell(number2);
        }
catch (Exception e) {}
    }
    
    public void overwrite() {
        try {
        outputfile.write();
        outputfile.close();
        outputfile = null;
        sourceww = null;
        Sheet11 = null;
        }
        catch (Exception e) {}
    }
    public void printValue(String ad) {
     Cell cell2 = Sheet1.getCell(ad);
     System.out.println(cell2.getContents());
    }

    public void writeVales(String[] values) {
        for (int i = 0; i <= values.length-1; i++) {
           // printValue(cotact[i]);
        }
    }

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
//jFileChooser1.setFileFilter(new FileNameExtensionFilter("Excel files (*.xls)", "xls"));
        jFileChooser1.setFileFilter(filta);
jFileChooser.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser1ActionPerformed
    if (evt.getActionCommand().equalsIgnoreCase(JFileChooser.APPROVE_SELECTION)) {
        jProgressBar1.setString("");
        jProgressBar1.setStringPainted(true);
    File l = jFileChooser1.getSelectedFile();
         try {
     if ((content.equals(""))||(content == null)) {
         content = l.getAbsolutePath();
     if (manga2 == false) {jProgressBar1.setString("Source: " + content);jProgressBar1.setValue(50);}
 else {jProgressBar1.setString("Source: " + content + " and Destination: " + content2);jProgressBar1.setValue(100);}
     
     jMenuItem1.setText("Select destination file (.xls)");
     }
 else {
         content2 = l.getAbsolutePath();
 if (content.equals(content2)&&(content2 != null)) {
     jProgressBar1.setString("Source and destination cannot be same");
     content2 = null; return;
 }
  else {
     jProgressBar1.setValue(100);
     jProgressBar1.setString("Source: " + content + " and Destination: " + content2);
     jMenuItem1.setVisible(false);
     jMenuItem2.setVisible(true);
     jMenuItem4.setVisible(true);
     jMenuItem7.setVisible(true);
     jMenu3.setVisible(true);
     jMenu1.setText("Results Operations");
     saveFileLocations();
 }
 }
 }
 catch (Exception e) {
     e.printStackTrace();
        }
jFileChooser.setVisible(false);

    }
 if (evt.getActionCommand().equalsIgnoreCase(JFileChooser.CANCEL_SELECTION)) {
     jFileChooser.setVisible(false);
 }
    }//GEN-LAST:event_jFileChooser1ActionPerformed

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed

    }//GEN-LAST:event_jMenu1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
 jInternalFrame1.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jInternalFrame1InternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_jInternalFrame1InternalFrameActivated
jFileChooser2.setFileFilter(filta);
//jFileChooser2.setVisible(false);
//jLabel2.setVisible(false);
jPanel4.setVisible(false);
jLabel17.setVisible(false);
    }//GEN-LAST:event_jInternalFrame1InternalFrameActivated

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
mat_no = jTextField1.getText();
mat_no = mat_no.toUpperCase();
    try {
File file = new File("res.dat");
if (file.exists()) {
   loadResultsSheetData();
   jInternalFrame3.setVisible(false);
}
 else {
  jInternalFrame3.setVisible(false);
jInternalFrame2.setVisible(true);
 }
} catch(Exception e) {e.printStackTrace();}

    try {
File file = new File("first.smr");
File file2 = new File("second.smr");
if ((file.exists())&&(file2.exists())) {
   loadSemesters();
   getDataFromSource();
putDataToDestination();
}
 else {
//jInternalFrame3.setVisible(false);
manga3 = true;
 }
} catch(Exception e) {e.printStackTrace();}
    }//GEN-LAST:event_jButton2ActionPerformed

public void getDataFromSource() {
    mat_no = mat_no.toUpperCase();
//System.out.println(Sheet1.getCell(new Integer(colmatnos).intValue(), 9).getContents());
for (int i = 0; i <= Sheet1.getRows()-1; i++) {
            //System.out.println(i);
//First locate the specified matriculation number
    

if (mat_no.equals(Sheet1.getCell(new Integer(colmatnos).intValue(), i).getContents())) {

    jProgressBar1.setString("Matric Number found at B"+(i + 1));

    String mark = Sheet1.getCell(new Integer(colscores).intValue(), i).getContents();
    marks = new Integer(mark).intValue();
//Get the year of entry of mat no
String mat = Sheet1.getCell(new Integer(colmatnos).intValue(), i).getContents();
String act_mat[] = mat.split("/");
for (int n = 0; n <= act_mat.length-1; n++) {
act_mat[n].trim();
}
act_mat[0] = act_mat[0].replaceAll("U", "");
int yr_of_student = new Integer(act_mat[0]).intValue();

//Next step should be to determine the year
String gre = Sheet1.getCell(courseyr).getContents();

String h[] = gre.split(":");
for (int u = 0; u <= h.length-1; u++) {
    h[u].trim();
}

String year[] = h[1].split("/");
for (int u = 0; u <= year.length-1; u++) {
    year[u] = year[u].replaceAll(" ", "");
}
int yr_of_result = new Integer(year[0]).intValue();
yrdiff = new Integer(yr_of_result-yr_of_student).toString();
xcourseyr = yrdiff;
//Get course title
String coursetitle[] = Sheet1.getCell(this.coursetitle).getContents().split(":");
for (int p = 0; p <= coursetitle.length-1; p++) {
    coursetitle[p].trim();
}
xcoursetitle = coursetitle[1];

//Get course unit
String courseunit[] = Sheet1.getCell(this.courseunit).getContents().split(":");
for (int p = 0; p <= courseunit.length-1; p++) {
    courseunit[p].trim();
}
xcourseunit = courseunit[1].replaceAll(" ", "");;

//Get course code
String coursecode[] = Sheet1.getCell(this.coursecode).getContents().split(":");
for (int p = 0; p <= coursecode.length-1; p++) {
    coursecode[p].trim();
}
coursecode[1] = coursecode[1].replaceAll(" ", "");
xcoursecode = coursecode[1];

//Get course semester
String semester[] = Sheet1.getCell(this.semester).getContents().split(":");
for (int p = 0; p <= semester.length-1; p++) {
    semester[p].trim();
}
semester[1] = semester[1].replaceAll(" ", "");
xsemester = semester[1].toLowerCase();

//System.out.println("Course Code:" + xcoursecode + " Course title:" + xcoursetitle + " Course year:" + xcourseyr + " Course unit:" + xcourseunit + " Course semester:" + xsemester);
//jInternalFrame2.setVisible(true);
return;
}
}
jProgressBar1.setString("Matric Number not found!!");

    }

public void prepareStudentsSheet() {
    mat_no = mat_no.replace("/", "_");
    //Prevents a students updated file from being deleted
    try {
File file = new File(mat_no + ".xls");
if (file.exists()) {
    assignDestination(mat_no + ".xls", mat_no + ".xls");
}
 else {
 assignDestination(mat_no + ".xls", content2);
 }
} catch(Exception e) {}
    mat_no = mat_no.replace("_", "/");
}

public void putDataToDestination() {
    //Open destination file.
    prepareStudentsSheet();
    try {
    //First step is to store mat no into file
//System.out.println(xsemester);
    //Second step is to get the year that result is to be put into
    if (xsemester.equals("first")) {
        String courses[] = fst_semester[new Integer(xcourseyr).intValue()].split(">");
    for (int y = 0; y <= courses.length-1; y++) {
    if (Sheet11.getCell(courses[y]).getContents().equals(xcoursecode)) {jProgressBar1.setString("Course already filled in!!");overwrite();return;}
    if ((((Sheet11.getCell(courses[y]).getContents() == "")||(Sheet11.getCell(courses[y]).getContents() == null)))&&(!Sheet11.getCell(courses[y]).getContents().equals(xcoursecode))) {
            //System.out.println("prints" + Sheet11.getCell(courses[y]).getContents());
            int opp = -2;
            try {
                for (int t = 0; t <= cotact.length-1; t++) {
                    if (cotact[t] == courses[y].toLowerCase().charAt(0)) {opp = t;}
                }
                String opp2 = "";
                for (int h = 1; h <= courses[y].length()-1; h++) {
                opp2 = opp2 + courses[y].charAt(h);
                }
                //System.out.println(opp + "?" + opp2);
                if ((opp >= 0)&&(!opp2.equals(""))) {
                    int oppp2 = new Integer(opp2).intValue();
//System.out.println("Should print");
Label label = new Label(opp, oppp2-1, xcoursecode);
Sheet11.addCell(label);
Label label2 = new Label(opp+1, oppp2-1, xcoursetitle);
Sheet11.addCell(label2);
jxl.write.Number cu = new jxl.write.Number(opp+2, oppp2-1, new Integer(xcourseunit).intValue());
Sheet11.addCell(cu);
jxl.write.Number mark = new jxl.write.Number(opp+3, oppp2-1, marks);
Sheet11.addCell(mark);
jProgressBar1.setString("First semester result filled into spreadsheet");
Sheet11.setName(Sheet11.getName().replace(" ", "_"));
                }
            }
            catch (Exception e) {e.printStackTrace();overwrite();}
            overwrite();
            return;
        }
    }
    }
    else if(xsemester.equals("second")) {
        String courses[] = scd_semester[new Integer(xcourseyr).intValue()].split(">");
for (int y = 0; y <= courses.length-1; y++) {
    if (Sheet11.getCell(courses[y]).getContents().equals(xcoursecode)) {jProgressBar1.setString("Course already filled in!!");overwrite();return;}
    if ((((Sheet11.getCell(courses[y]).getContents() == "")||(Sheet11.getCell(courses[y]).getContents() == null)))&&(!Sheet11.getCell(courses[y]).getContents().equals(xcoursecode))) {
            //System.out.println("prints" + Sheet11.getCell(courses[y]).getContents());
            int opp = -2;
            try {
                for (int t = 0; t <= cotact.length-1; t++) {
                    if (cotact[t] == courses[y].toLowerCase().charAt(0)) {opp = t;}
                }
                String opp2 = "";
                for (int h = 1; h <= courses[y].length()-1; h++) {
                opp2 = opp2 + courses[y].charAt(h);
                }
                //System.out.println(opp + "?" + opp2);
                if ((opp >= 0)&&(!opp2.equals(""))) {
                    int oppp2 = new Integer(opp2).intValue();
//System.out.println("Should print");
Label label = new Label(opp, oppp2-1, xcoursecode);
Sheet11.addCell(label);
Label label2 = new Label(opp+1, oppp2-1, xcoursetitle);
Sheet11.addCell(label2);
jxl.write.Number cu = new jxl.write.Number(opp+2, oppp2-1, new Integer(xcourseunit).intValue());
Sheet11.addCell(cu);
jxl.write.Number mark = new jxl.write.Number(opp+3, oppp2-1, marks);
Sheet11.addCell(mark);
jProgressBar1.setString("Second semester result filled into spreadsheet");
Sheet11.setName(Sheet11.getName().replace(" ", "_"));

                }
            }
            catch (Exception e) {e.printStackTrace();overwrite();}
            overwrite();
            return;
        }
    }
    }
    //Sheet11.setName(mat_no.replaceAll("/", "_"));
    overwrite();
    }
    catch (Exception e) {e.printStackTrace(); overwrite();}
}


public void retrieveDataFromTables(int semestr) {
    //Collects data from tables and stores them into string
    for (int p = 0; p <= fst_semester.length-1; p++) {
        //Initialsing all semesters, making sure nuffin funny happens
        fst_semester[p] = "";
        scd_semester[p] = "";
    }

    for (int i = 0; i <= 15; i++) {
        if (semestr == 1) {
            try {
        if (jTable2.getValueAt(i, 0).toString() == null ? "" != null : !jTable2.getValueAt(i, 0).toString().equals("")) fst_semester[0] = fst_semester[0] + (String)jTable2.getValueAt(i, 0) + ">";
            } catch (Exception e) {}
            try {
        if (jTable3.getValueAt(i, 0).toString() == null ? "" != null : !jTable3.getValueAt(i, 0).toString().equals("")) fst_semester[1] = fst_semester[1] + (String)jTable3.getValueAt(i, 0) + ">";
           } catch (Exception e) {}
            try {
            if (jTable4.getValueAt(i, 0).toString() == null ? "" != null : !jTable4.getValueAt(i, 0).toString().equals("")) fst_semester[2] = fst_semester[2] + (String)jTable4.getValueAt(i, 0) + ">";
           } catch (Exception e) {}
           try {
            if (jTable5.getValueAt(i, 0).toString() == null ? "" != null : !jTable5.getValueAt(i, 0).toString().equals("")) fst_semester[3] = fst_semester[3] + (String)jTable5.getValueAt(i, 0) + ">";
         } catch (Exception e) {}
            try {
            if (jTable6.getValueAt(i, 0).toString() == null ? "" != null : !jTable6.getValueAt(i, 0).toString().equals("")) fst_semester[4] = fst_semester[4] + (String)jTable6.getValueAt(i, 0) + ">";
           } catch (Exception e) {}
            try {
            if (jTable7.getValueAt(i, 0).toString() == null ? "" != null : !jTable7.getValueAt(i, 0).toString().equals("")) fst_semester[5] = fst_semester[5] + (String)jTable7.getValueAt(i, 0) + ">";
        } catch (Exception e) {}
           try {
            if (jTable8.getValueAt(i, 0).toString() == null ? "" != null : !jTable8.getValueAt(i, 0).toString().equals("")) fst_semester[6] = fst_semester[6] + (String)jTable8.getValueAt(i, 0) + ">";
        } catch (Exception e) {}
 if (i == 15) {
     try {
File file = new File("first.smr");
if (file.exists()) file.delete();
BufferedWriter out = new BufferedWriter(new FileWriter(file,true));
for (int j = 0; j <= fst_semester.length-1; j++) {
    //fst_semester[j] = fst_semester[j].replaceAll("@|", "@");
    //fst_semester[j] = fst_semester[j].replaceAll("@@", "@");
out.write(fst_semester[j]);
out.write("@");
            }
out.close();
} catch(IOException e) {}

 }
        }
 if (semestr == 2) {
        try {
        if (jTable2.getValueAt(i, 0).toString() == null ? "" != null : !jTable2.getValueAt(i, 0).toString().equals("")) scd_semester[0] = scd_semester[0] + (String)jTable2.getValueAt(i, 0) + ">";
        } catch (Exception e) {}
        try {
        if (jTable3.getValueAt(i, 0).toString() == null ? "" != null : !jTable3.getValueAt(i, 0).toString().equals("")) scd_semester[1] = scd_semester[1] + (String)jTable3.getValueAt(i, 0) + ">";
        } catch (Exception e) {}
        try {
        if (jTable4.getValueAt(i, 0).toString() == null ? "" != null : !jTable4.getValueAt(i, 0).toString().equals("")) scd_semester[2] = scd_semester[2] + (String)jTable4.getValueAt(i, 0) + ">";
        } catch (Exception e) {}
        try {
        if (jTable5.getValueAt(i, 0).toString() == null ? "" != null : !jTable5.getValueAt(i, 0).toString().equals("")) scd_semester[3] = scd_semester[3] + (String)jTable5.getValueAt(i, 0) + ">";
        } catch (Exception e) {}
        try {
        if (jTable6.getValueAt(i, 0).toString() == null ? "" != null : !jTable6.getValueAt(i, 0).toString().equals("")) scd_semester[4] = scd_semester[4] + (String)jTable6.getValueAt(i, 0) + ">";
        } catch (Exception e) {}
        try {
        if (jTable7.getValueAt(i, 0).toString() == null ? "" != null : !jTable7.getValueAt(i, 0).toString().equals("")) scd_semester[5] = scd_semester[5] + (String)jTable7.getValueAt(i, 0) + ">";
        } catch (Exception e) {}
        try {
        if (jTable8.getValueAt(i, 0).toString() == null ? "" != null : !jTable8.getValueAt(i, 0).toString().equals("")) scd_semester[6] = scd_semester[6] + (String)jTable8.getValueAt(i, 0) + ">";
        } catch (Exception e) {}
 if (i == 15) {
        try {
        File file = new File("second.smr");
if (file.exists()) file.delete();
BufferedWriter out = new BufferedWriter(new FileWriter(file,true));
for (int j = 0; j <= scd_semester.length-1; j++) {
    //scd_semester[j] = scd_semester[j].replaceAll("@|", "@");
    //scd_semester[j] = scd_semester[j].replaceAll("@@", "@");
out.write(scd_semester[j]);
out.write("@");
            }
out.close();
} catch(IOException e) {}
                }
        }
 }
    
}

public boolean saveResultsSheetData() {
    try {
if (jTextField2.getText() == null ? "" != null : !jTextField2.getText().equals("")) {coursecode = jTextField2.getText();} else return false;
if (jTextField3.getText() == null ? "" != null : !jTextField3.getText().equals("")) {coursetitle = jTextField3.getText();} else return false;
if (jTextField4.getText() == null ? "" != null : !jTextField4.getText().equals("")) {courseyr = jTextField4.getText();} else return false;
if (jTextField5.getText() == null ? "" != null : !jTextField5.getText().equals("")) {courseunit = jTextField5.getText();} else return false;
if (jTextField6.getText() == null ? "" != null : !jTextField6.getText().equals("")) {semester = jTextField6.getText();} else return false;

colmatnos = (String)jComboBox1.getSelectedItem();
colscores = (String)jComboBox2.getSelectedItem();

//Reset components
jTextField2.setText(null);jTextField3.setText(null);jTextField4.setText(null);
jComboBox1.setSelectedIndex(0);jComboBox2.setSelectedIndex(0);
if (jCheckBox1.isSelected()) {saveResults = true;}
    }
    catch (Exception ee) {return false;}
if (saveResults) {
try {
File file = new File("res.dat");
if (file.exists()) file.delete();
BufferedWriter out = new BufferedWriter(new FileWriter(file,true));

out.write(coursecode + ">" + coursetitle + ">" + courseyr + ">" + courseunit + ">" + colmatnos + ">" + colscores + ">" + semester);
out.close();
} catch(IOException e) {return false;}
    }
 return true;
}

private void loadFileLocations() {
       try {
         BufferedReader in = new BufferedReader(new FileReader("location.log"));
         String g = in.readLine();
         String he[] = g.split("@");

content = he[0]; content2 = he[1];
         in.close();
        } catch (FileNotFoundException fe) {
    }
   catch (IOException er) {
   }
}

public void saveFileLocations() {
 try {
File file = new File("location.log");
if (file.exists()) file.delete();
BufferedWriter out = new BufferedWriter(new FileWriter(file,true));

out.write(content + "@" + content2);
out.close();
} catch(IOException e) {}
}

public boolean loadResultsSheetData() {
       try {
         BufferedReader in = new BufferedReader(new FileReader("res.dat"));
         String g = in.readLine();
         String he[] = g.split(">");
 
coursecode = he[0]; coursetitle = he[1]; courseyr = he[2]; courseunit = he[3]; colmatnos = he[4]; colscores = he[5];semester = he[6];
         in.close();
         for (int u = 0; u <= cotact.length-1; u++) {
if (colmatnos.toLowerCase().charAt(0) == cotact[u]) colmatnos = new Integer(u).toString();
    }
         for (int v = 0; v <= cotact.length-1; v++) {
if (colscores.toLowerCase().charAt(0) == cotact[v]) colscores = new Integer(v).toString();
    }
        } catch (FileNotFoundException fe) {
            return false;
    }
   catch (IOException er) {
       return false;
   }
    return true;
}

public void loadSemesters() {
   try {
         BufferedReader in = new BufferedReader(new FileReader("first.smr"));
         String g = in.readLine();
         String he[] = g.split(">@");
         //System.out.println(he.length);
for (int t = 0; t <= he.length-1; t++) {
   fst_semester[t] = he[t];
}
           in.close();
           for (int r = 0; r <= fst_semester.length-1; r++) {
           //System.out.println("1st Semester Yr " + r + " = " + fst_semester[r]);
       }
        } catch (FileNotFoundException fe) {
            //return false;
    }
   catch (IOException er) {
       //return false;
   }

      try {
         BufferedReader in = new BufferedReader(new FileReader("second.smr"));
         String g = in.readLine();
         String he[] = g.split(">@");
for (int t = 0; t <= he.length-1; t++) {
   scd_semester[t] = he[t];
}
           in.close();
           for (int r = 0; r <= scd_semester.length-1; r++) {
           //System.out.println("2nd Semester Yr " + r + " = " + scd_semester[r]);
       }
        } catch (FileNotFoundException fe) {
            //return false;
    }
   catch (IOException er) {
       //return false;
   }
}

//Method selects right cells on destination to put in data based on semester and year difference bw when student entered and actual date of course
public void putIntoRightCell(String yrdif, String semestr) {

    if (semestr.equals("first")) {

String[] she = fst_semester[new Integer(yrdif).intValue()].split(">");
for (int h = 0; h <= she.length-1; h++) {
    if (Sheet11.getCell(she[h]).getContents() == null ? "" != null : !Sheet11.getCell(she[h]).getContents().equals("")) {
        //Fill in course code, title and score
        //xcoursecode, xcoursetitle, xcourseyr, xsemester;

        
Label label = new Label(0, 0, result);
   try {
Sheet11.addCell(label);
        }
   catch (Exception e) {}
    }
        }
        }
 else if (semestr.equals("second")) {
String[] she = scd_semester[new Integer(yrdif).intValue()].split(">");
for (int h = 0; h <= she.length-1; h++) {
    if (Sheet11.getCell(she[h]).getContents() == null ? "" != null : !Sheet11.getCell(she[h]).getContents().equals("")) {
        //Fill in course code, topic and score

    }
        }
    }
}

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
jInternalFrame3.setVisible(true);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
overwrite();
    }//GEN-LAST:event_formWindowClosed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
jDialog1.setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jInternalFrame3InternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_jInternalFrame3InternalFrameActivated
assignSource(content);

    }//GEN-LAST:event_jInternalFrame3InternalFrameActivated

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
manga = true;
        if (saveResultsSheetData()) {
        jInternalFrame2.setVisible(false);
        if (manga) jInternalFrame4.setVisible(true);
        }
if (manga) jProgressBar1.setString("Course Information Changed!!");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
if (semest <= 3) retrieveDataFromTables(semest);
semest++;
if (semest == 2) {
jButton6.setText("Fill in Second Semester Information");
jLabel11.setText("SECOND SEMESTER COURSES");
}
 else if (semest == 3) {
   jButton6.setText("Save and Continue");
   jLabel11.setText("COURSE INFO FILLED!!");
   jLabel10.setText("Please Click the Button below to continue!!");
 }
 else if (semest == 4) {
     jInternalFrame4.setVisible(false);
     jProgressBar1.setString("All information saved to file...");
     semest = 1;
 }
for (int y = 0; y <= 15; y++) {
    //Empty tables
    jTable2.setValueAt(null, y, 0);
    jTable3.setValueAt(null, y, 0);
    jTable4.setValueAt(null, y, 0);
    jTable5.setValueAt(null, y, 0);
    jTable6.setValueAt(null, y, 0);
    jTable7.setValueAt(null, y, 0);
    jTable8.setValueAt(null, y, 0);
}
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
jInternalFrame2.setVisible(true);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
semest = 1;
jInternalFrame4.setVisible(true);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
content = "";
jFileChooser1.setFileFilter(filta);
//jFileChooser1.setFileFilter(new FileNameExtensionFilter("Excel files (*.xls)", "xls"));
jFileChooser.setVisible(true);
saveFileLocations();
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
content2 = "";
jFileChooser1.setFileFilter(filta);
//jFileChooser1.setFileFilter(new FileNameExtensionFilter("Excel files (*.xls)", "xls"));
jFileChooser.setVisible(true);
saveFileLocations();
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
jInternalFrame2.setVisible(true);
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6ActionPerformed

    private void jFileChooser2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser2ActionPerformed

        if (evt.getActionCommand().equalsIgnoreCase(JFileChooser.APPROVE_SELECTION)) {
    File l = jFileChooser2.getSelectedFile();
         try {
         mat_file = l.getAbsolutePath();
        }
         catch (Exception e) {}
    jFileChooser2.setVisible(false);
    jLabel2.setVisible(false);
    jPanel4.setVisible(true);
    }
    if (evt.getActionCommand().equalsIgnoreCase(JFileChooser.CANCEL_SELECTION)) {
        jInternalFrame1.setVisible(false);
    }
    }//GEN-LAST:event_jFileChooser2ActionPerformed

    public void batchOperation(String resultfile, String matnum, boolean load) {
        assignSource(resultfile);//Loading result file
        mat_no = matnum;
        if (load) {
    try {
File file = new File("res.dat");
if (file.exists()) {
   loadResultsSheetData();
}
} catch(Exception e) {e.printStackTrace();}

    try {
File file = new File("first.smr");
File file2 = new File("second.smr");
if ((file.exists())&&(file2.exists())) {
   loadSemesters();
}

} catch(Exception e) {e.printStackTrace();}
        }
        try {
getDataFromSource();
putDataToDestination();
        }
        catch (Exception e) {}
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
//jLabel17.setVisible(true);
        lower = new Integer(jTextField7.getText()).intValue(); upper = new Integer(jTextField8.getText()).intValue();cello = jComboBox3.getSelectedIndex();
if (lower >= upper) {jProgressBar1.setString("Interval invalid"); return;}
jInternalFrame1.setVisible(false);
        jFileChooser2.setVisible(true);
        jLabel2.setVisible(true);
    jPanel4.setVisible(false);
try {
    File file = new File("batch.log");
   
    if (file.exists()) {
      BufferedReader in = new BufferedReader(new FileReader("batch.log"));
         content3 = in.readLine();
         in.close();
         jProgressBar1.setString(jProgressBar1.getString() + " Batch folder set!!");
         doBatchOperation();
    }
 else {
        jInternalFrame5.setVisible(true);
 }
}
catch (Exception e) {}   
    }//GEN-LAST:event_jButton1ActionPerformed

    private void loadBatchLocation() {
        try {
            File file = new File("batch.log");
        if (file.exists()) {
      BufferedReader in = new BufferedReader(new FileReader("batch.log"));
         content3 = in.readLine();
         in.close();
         jProgressBar1.setString(jProgressBar1.getString() + " Batch folder:" + content3);
    }
        }
        catch (Exception e) {}
    }


public void doBatchOperation() {
//First step is to load matric no file
assignxSource(mat_file);

//Next get the result files
File fl = new File(content3);
if (fl.isDirectory()) {
File d[] = fl.listFiles();

for (int h = 0; h <= d.length-1; h++) {
     if ((filta.accept(d[h]))&&(d[h].isFile())) {
         for (int p = lower-1; p <= upper-1; p++) {
             mat_no = Sheet2.getCell(cello, p).getContents();
             assignSource(d[h].getAbsolutePath());
     batchOperation(d[h].getAbsolutePath(), mat_no, loaded);
     loaded = false;
         }
     }
}
}
deassignx();jProgressBar1.setString("Completed operation");
        }

    private void jInternalFrame5InternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_jInternalFrame5InternalFrameActivated

    }//GEN-LAST:event_jInternalFrame5InternalFrameActivated

    private void jFileChooser3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser3ActionPerformed
jInternalFrame5.setVisible(false);
if (manga4 == false) jProgressBar1.setString("Processing...");
        if (evt.getActionCommand().equalsIgnoreCase(JFileChooser.APPROVE_SELECTION)) {
File file = jFileChooser3.getSelectedFile();
if (file.isDirectory()) content3 = file.getAbsolutePath();
System.out.println(content3);
try {
File file2 = new File("batch.log");
if (file2.exists()) file2.delete();
BufferedWriter out = new BufferedWriter(new FileWriter(file2,true));
out.write(content3);
out.close();
if (manga4 == false) {doBatchOperation();}
 else {jProgressBar1.setString("Source: " + content + " and Destination: " + content2 + " Batch folder: " + content3);}
}
catch (Exception e) {}
}
if (evt.getActionCommand().equalsIgnoreCase(JFileChooser.CANCEL_SELECTION)) {

}
manga4 = false;
    }//GEN-LAST:event_jFileChooser3ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
manga4 = true;jInternalFrame5.setVisible(true);
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExcelFileMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JButton jButton2;
    javax.swing.JButton jButton6;
    javax.swing.JCheckBox jCheckBox1;
    javax.swing.JComboBox jComboBox1;
    javax.swing.JComboBox jComboBox2;
    javax.swing.JComboBox jComboBox3;
    javax.swing.JDialog jDialog1;
    javax.swing.JInternalFrame jFileChooser;
    javax.swing.JFileChooser jFileChooser1;
    javax.swing.JFileChooser jFileChooser2;
    javax.swing.JFileChooser jFileChooser3;
    javax.swing.JInternalFrame jInternalFrame1;
    javax.swing.JInternalFrame jInternalFrame2;
    javax.swing.JInternalFrame jInternalFrame3;
    javax.swing.JInternalFrame jInternalFrame4;
    javax.swing.JInternalFrame jInternalFrame5;
    javax.swing.JLabel jLabel10;
    javax.swing.JLabel jLabel11;
    javax.swing.JLabel jLabel17;
    javax.swing.JLabel jLabel2;
    javax.swing.JLabel jLabel3;
    javax.swing.JMenu jMenu1;
    javax.swing.JMenu jMenu2;
    javax.swing.JMenu jMenu3;
    javax.swing.JMenu jMenu4;
    javax.swing.JMenuItem jMenuItem1;
    javax.swing.JMenuItem jMenuItem10;
    javax.swing.JMenuItem jMenuItem2;
    javax.swing.JMenuItem jMenuItem4;
    javax.swing.JMenuItem jMenuItem5;
    javax.swing.JMenuItem jMenuItem6;
    javax.swing.JMenuItem jMenuItem7;
    javax.swing.JPanel jPanel4;
    javax.swing.JProgressBar jProgressBar1;
    javax.swing.JTable jTable2;
    javax.swing.JTable jTable3;
    javax.swing.JTable jTable4;
    javax.swing.JTable jTable5;
    javax.swing.JTable jTable6;
    javax.swing.JTable jTable7;
    javax.swing.JTable jTable8;
    javax.swing.JTextField jTextField1;
    javax.swing.JTextField jTextField2;
    javax.swing.JTextField jTextField3;
    javax.swing.JTextField jTextField4;
    javax.swing.JTextField jTextField5;
    javax.swing.JTextField jTextField6;
    javax.swing.JTextField jTextField7;
    javax.swing.JTextField jTextField8;
    // End of variables declaration//GEN-END:variables

}
